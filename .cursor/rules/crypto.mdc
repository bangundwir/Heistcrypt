---
globs: **/*.go
---
# Cryptography & Security Constraints

Derived from [ide.md](mdc:ide.md)

- Core algorithms:
  - AES-256-GCM (default / Normal Mode)
  - XChaCha20 (Paranoid Mode), optionally with Serpent cascade
  - HMAC-SHA3 for Paranoid Mode integrity when needed
- Key derivation:
  - Use Argon2id for password-based keys
  - Expose tunables (memory, iterations, parallelism) with sane, safe defaults
- AEAD & integrity:
  - Prefer AEAD (GCM or ChaCha20-Poly1305)
  - Auto integrity check must run before decryption output is exposed
- Keyfiles:
  - Support multiple keyfiles and order enforcement when enabled
- Chunking & large files:
  - Stream processing; avoid loading entire files in memory
  - Optional chunking compatible with split output
- Error handling:
  - Fail closed on auth/tag mismatch unless Force Decrypt is explicitly set
  - Provide clear error types for integrity vs I/O vs config
- Secure defaults:
  - Zero secrets from memory where feasible
  - Use crypto/rand for nonces/keys; never math/rand
  - Unique nonces per key; implement nonce manager or derive from counter safely
- Deniability Mode:
  - Output should be indistinguishable from random stream; no metadata leaks
- Reedâ€“Solomon ECC (future phase):
  - Apply after encryption as an outer layer for archival reliability