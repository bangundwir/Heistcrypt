name: Test Build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    paths-ignore:
      - "VERSION"
  workflow_dispatch:

jobs:
  test-build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        # Temporarily remove macOS to reduce complexity
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        check-latest: true
        cache: true

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc libgl1-mesa-dev xorg-dev

    - name: Install dependencies
      run: go mod tidy

    - name: Verify project structure
      run: |
        ls -la
        echo "Checking main.go..."
        head -5 main.go

    - name: Build for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo "Building for Linux..."
        mkdir -p dist/linux
        go build -v -o dist/linux/HadesCrypt .
        echo "Build completed!"
        file dist/linux/HadesCrypt
        ls -la dist/linux/HadesCrypt
      env:
        CGO_ENABLED: 1

    - name: Build for Windows  
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        Write-Host "Building for Windows..."
        New-Item -ItemType Directory -Force -Path dist/windows
        go build -v -o dist/windows/HadesCrypt.exe .
        Write-Host "Build completed!"
        Get-Item dist/windows/HadesCrypt.exe
        Get-FileHash dist/windows/HadesCrypt.exe -Algorithm SHA256
      env:
        CGO_ENABLED: 1

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-build-${{ matrix.os }}
        path: |
          dist/
        if-no-files-found: error
        retention-days: 1
