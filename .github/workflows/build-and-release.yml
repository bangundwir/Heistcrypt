name: Build and Release HadesCrypt

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 2.1.0) if no tag'
        required: false

env:
  GO_VERSION: '1.25.x'
  APP_NAME: HadesCrypt
  BUILD_DIR: dist

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Derive Version
        id: version
        shell: pwsh
        run: |
          if ($env:GITHUB_EVENT_NAME -eq 'workflow_dispatch' -and '${{ github.event.inputs.version }}' -ne '') {
            $v='${{ github.event.inputs.version }}'
          } else {
            $v=$env:GITHUB_REF -replace '^refs/tags/v',''
          }
            "version=$v" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8
            Set-Content VERSION $v
            Write-Host "Version: $v"

      - name: Build Windows x64
        shell: pwsh
        run: |
          $v='${{ steps.version.outputs.version }}'
          New-Item -ItemType Directory -Force -Path '${{ env.BUILD_DIR }}\windows' | Out-Null
          $out='${{ env.BUILD_DIR }}\windows\${{ env.APP_NAME }}-v'+$v+'-Windows-x64.exe'
          $ld='-s -w -H windowsgui -X main.version='+$v
          go build -ldflags $ld -o $out .
          if (!(Test-Path $out)) { Write-Error 'Build failed'; exit 1 }

      - name: Portable Package
        shell: pwsh
        run: |
          $v='${{ steps.version.outputs.version }}'
          $pkg='${{ env.BUILD_DIR }}\windows\dist\${{ env.APP_NAME }}-v'+$v+'-Windows-x64'
          New-Item -ItemType Directory -Force -Path $pkg | Out-Null
          Copy-Item '${{ env.BUILD_DIR }}\windows\${{ env.APP_NAME }}-v'+$v+'-Windows-x64.exe' "$pkg\${{ env.APP_NAME }}.exe"
          foreach ($f in 'README.md','CHANGELOG.md','VERSION') { if (Test-Path $f) { Copy-Item $f $pkg -ErrorAction SilentlyContinue } }
          @("# HadesCrypt v$v Quick Start","Run ${ { env.APP_NAME } }.exe","Drag & drop to encrypt/decrypt") | Out-File -FilePath "$pkg\QUICK_START.txt" -Encoding utf8
          Get-ChildItem $pkg | Select Name,Length | Format-Table -AutoSize | Out-String | Out-File "$pkg\FILES.txt"

      - name: Zip & Checksums
        shell: pwsh
        run: |
          $v='${{ steps.version.outputs.version }}'
          $base='${{ env.BUILD_DIR }}\windows'
          $pkgDir="$base\dist\${{ env.APP_NAME }}-v${v}-Windows-x64"
          $zip="$base\${{ env.APP_NAME }}-v${v}-Windows-x64.zip"
          if (Test-Path $zip) { Remove-Item $zip -Force }
          Compress-Archive -Path "$pkgDir\*" -DestinationPath $zip
          $exe="$base\${{ env.APP_NAME }}-v${v}-Windows-x64.exe"
          $checksums="$base\SHA256SUMS.txt"
          ("${{ env.APP_NAME }}-v${v}-Windows-x64.exe  " + (Get-FileHash -Algorithm SHA256 $exe).Hash) | Out-File $checksums -Encoding ascii
          ("${{ env.APP_NAME }}-v${v}-Windows-x64.zip  " + (Get-FileHash -Algorithm SHA256 $zip).Hash) | Out-File $checksums -Append -Encoding ascii

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-v${{ steps.version.outputs.version }}
          path: |
            ${{ env.BUILD_DIR }}/windows/*.exe
            ${{ env.BUILD_DIR }}/windows/*.zip
            ${{ env.BUILD_DIR }}/windows/SHA256SUMS.txt
            ${{ env.BUILD_DIR }}/windows/dist/**
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref,'refs/tags/v')
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-v${{ needs.build.outputs.version }}
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: HadesCrypt v${{ needs.build.outputs.version }}
          files: |
            artifacts/*.exe
            artifacts/*.zip
            artifacts/SHA256SUMS.txt
          draft: false
          prerelease: false
          generate_release_notes: true

  test-build:
    if: github.event_name == 'workflow_dispatch' && !startsWith(github.ref,'refs/tags/v')
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Test Build
        run: |
          go build -o test-build.exe .
          if (Test-Path test-build.exe) { Write-Host 'OK' } else { exit 1 }
