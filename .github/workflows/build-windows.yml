name: build-windows

permissions:
  contents: write

on:
  push:
    paths:
      - "VERSION"
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        check-latest: true
        cache: true

    - name: Install dependencies
      run: go mod tidy

    - name: Build
      run: |
        go build -v -ldflags="-s -w" -o dist/windows/HadesCrypt.exe .
      env:
        CGO_ENABLED: 1
        GOARCH: amd64

    - name: Get version
      shell: pwsh
      run: |
        $version = Get-Content -Path "VERSION" -Raw
        $version = $version.Trim()
        echo "VERSION=$version" >> $env:GITHUB_ENV

    - name: Create distribution package
      shell: pwsh
      run: |
        $packageName = "HadesCrypt-v${{ env.VERSION }}-Windows-x64"
        $packageDir = "dist/$packageName"
        
        New-Item -ItemType Directory -Force -Path $packageDir
        New-Item -ItemType Directory -Force -Path "$packageDir/docs"
        
        Copy-Item "dist/windows/HadesCrypt.exe" "$packageDir/HadesCrypt.exe"
        Copy-Item "README.md" "$packageDir/docs/README.md" -ErrorAction SilentlyContinue
        Copy-Item "CHANGELOG.md" "$packageDir/docs/CHANGELOG.md" -ErrorAction SilentlyContinue
        Copy-Item "dist/windows/install.bat" "$packageDir/install.bat"
        
        "# HadesCrypt v$env:VERSION - Quick Start Guide" | Out-File -FilePath "$packageDir/QUICK_START.txt" -Encoding UTF8
        "" | Out-File -FilePath "$packageDir/QUICK_START.txt" -Encoding UTF8 -Append
        "## Installation" | Out-File -FilePath "$packageDir/QUICK_START.txt" -Encoding UTF8 -Append
        "1. Extract all files to a folder" | Out-File -FilePath "$packageDir/QUICK_START.txt" -Encoding UTF8 -Append
        "2. Run install.bat as Administrator (optional)" | Out-File -FilePath "$packageDir/QUICK_START.txt" -Encoding UTF8 -Append
        "3. Or simply run HadesCrypt.exe directly" | Out-File -FilePath "$packageDir/QUICK_START.txt" -Encoding UTF8 -Append
        "" | Out-File -FilePath "$packageDir/QUICK_START.txt" -Encoding UTF8 -Append
        "## Basic Usage" | Out-File -FilePath "$packageDir/QUICK_START.txt" -Encoding UTF8 -Append
        "1. Launch HadesCrypt.exe" | Out-File -FilePath "$packageDir/QUICK_START.txt" -Encoding UTF8 -Append
        "2. Drag and drop your file into the application" | Out-File -FilePath "$packageDir/QUICK_START.txt" -Encoding UTF8 -Append
        "3. Enter a strong password" | Out-File -FilePath "$packageDir/QUICK_START.txt" -Encoding UTF8 -Append
        "4. Click Encrypt to encrypt or Decrypt to decrypt" | Out-File -FilePath "$packageDir/QUICK_START.txt" -Encoding UTF8 -Append
        "" | Out-File -FilePath "$packageDir/QUICK_START.txt" -Encoding UTF8 -Append
        "Lock your secrets, rule your data." | Out-File -FilePath "$packageDir/QUICK_START.txt" -Encoding UTF8 -Append

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-windows
        path: |
          dist/windows/HadesCrypt.exe
          dist/HadesCrypt-v${{ env.VERSION }}-Windows-x64/
        if-no-files-found: error
        compression-level: 9

    - name: Generate checksums
      shell: pwsh
      run: |
        $hash = Get-FileHash "dist/windows/HadesCrypt.exe" -Algorithm SHA256
        echo "CHECKSUM_HADESCRYPT=$($hash.Hash)" >> $env:GITHUB_ENV

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/windows/HadesCrypt.exe
        tag_name: v${{ env.VERSION }}
        name: HadesCrypt v${{ env.VERSION }}
        make_latest: true
        append_body: true
        body: |
          **Windows Build:**
          `sha256(HadesCrypt.exe)  ${{ env.CHECKSUM_HADESCRYPT }}`
